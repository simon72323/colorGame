{"version":3,"file":"index.js","sources":["../../../../../packages/utils/reactivity/index.ts"],"sourcesContent":["import { getUrlQuery } from '@gtLibTs/utils/urlUtils';\n\nimport {\n    computed as _computed,\n    effect as _effect,\n    Ref,\n    isRef,\n    isShallow,\n    isReactive,\n    ComputedRef,\n    EffectScope,\n    ReactiveEffect,\n    ComputedGetter,\n    DebuggerOptions,\n    EffectScheduler,\n    WritableComputedRef,\n    ReactiveEffectOptions,\n    WritableComputedOptions,\n    ReactiveEffectRunner\n} from './vue-reactivity';\n\nexport {\n    ref,\n    toRef,\n    toRefs,\n    toRaw,\n    triggerRef,\n    isReadonly,\n    reactive,\n    customRef,\n    deferredComputed,\n    effectScope,\n    enableTracking,\n    getCurrentScope,\n    isProxy,\n    isReactive,\n    isRef,\n    isShallow,\n    ITERATE_KEY,\n    markRaw,\n    onScopeDispose,\n    pauseTracking,\n    proxyRefs,\n    readonly,\n    resetTracking,\n    shallowReactive,\n    shallowReadonly,\n    track,\n    trigger,\n    unref,\n    stop\n} from './vue-reactivity';\n\nexport type {\n    ComputedRef,\n    Ref,\n    ComputedGetter,\n    ComputedSetter,\n    CustomRefFactory,\n    DebuggerEvent,\n    DebuggerEventExtraInfo,\n    DebuggerOptions,\n    DeepReadonly,\n    EffectScheduler,\n    EffectScope,\n    Raw,\n    ReactiveEffect,\n    ReactiveEffectOptions,\n    ReactiveEffectRunner,\n    RefUnwrapBailTypes,\n    ShallowReactive,\n    ShallowRef,\n    ShallowUnwrapRef,\n    ToRef,\n    ToRefs,\n    UnwrapNestedRefs,\n    UnwrapRef,\n    WritableComputedOptions,\n    WritableComputedRef\n} from './vue-reactivity';\n\nconst __DEVELOPMENT__ = getUrlQuery('isDev') === 'true';\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value: unknown): string => objectToString.call(value);\nconst isArray = Array.isArray;\nconst isMap = (val: unknown): val is Map<any, any> => toTypeString(val) === '[object Map]';\nconst isSet = (val: unknown): val is Set<any> => toTypeString(val) === '[object Set]';\nconst isFunction = (val: unknown): val is Function => typeof val === 'function';\nconst isObject = (val: unknown): val is Record<any, any> => val !== null && typeof val === 'object';\nconst isPlainObject = (val: unknown): val is object => toTypeString(val) === '[object Object]';\nconst isPromise = <T = any>(val: unknown): val is Promise<T> =>\n    isObject(val) && isFunction(val.then) && isFunction(val.catch);\n\n// compare whether a value has changed, accounting for NaN.\nconst hasChanged = (value: any, oldValue: any): boolean => !Object.is(value, oldValue);\n\ntype InvalidateCbRegistrator = (cb: () => void) => void\n\nconst EMPTY_OBJ: { readonly [key: string]: any } = __DEVELOPMENT__\n    ? Object.freeze({})\n    : {};\nconst NOOP = () => {};\n\ntype WatchEffect = (onInvalidate: InvalidateCbRegistrator) => void\n\ntype WatchSource<T = any> = Ref<T> | ComputedRef<T> | (() => T)\n\ntype WatchCallback<V = any, OV = any> = (\n    value: V,\n    oldValue: OV,\n) => any;\n\ntype MapSources<T, Immediate> = {\n    [K in keyof T]: T[K] extends WatchSource<infer V>\n        ? Immediate extends true\n            ? V | undefined\n            : V\n        : T[K] extends object\n            ? Immediate extends true\n                ? T[K] | undefined\n                : T[K]\n            : never\n};\n\ninterface WatchOptions<Immediate = boolean> extends DebuggerOptions {\n    immediate?: Immediate;\n    deep?: boolean;\n    fixed?: boolean;\n}\n\nexport type WatchStopHandle = () => void;\nexport type DisposeCallback = WatchStopHandle | ((disposeBag?: WatchStopHandle[]) => void);\n\n// initial value for watchers to trigger on undefined initial values\nconst INITIAL_WATCHER_VALUE = {};\nconst ErrorCodes = {\n    WATCH_GETTER: 'watcher getter',\n    WATCH_CALLBACK: 'watcher callback',\n    WATCH_CLEANUP: 'watcher cleanup function'\n};\n\ntype MultiWatchSources = (WatchSource<unknown> | object)[]\n\nfunction callWithErrorHandling(\n    fn: Function,\n    type: string,\n    args?: unknown[]\n) {\n    let res;\n    try {\n        res = args ? fn(...args) : fn();\n    } catch (err) {\n        console.warn(type, err);\n    }\n    return res;\n}\n\nfunction callWithAsyncErrorHandling(\n    fn: Function | Function[],\n    type: string,\n    args?: unknown[]\n): any[] {\n    if (isFunction(fn)) {\n        const res = callWithErrorHandling(fn, type, args);\n        if (res && isPromise(res)) {\n            res.catch(err => {\n                console.warn(err);\n            });\n        }\n        return res;\n    }\n\n    const values = [];\n    for (let i = 0; i < fn.length; i++) {\n        values.push(callWithAsyncErrorHandling(fn[i],type,args));\n    }\n    return values;\n}\n\nexport function createDisposeBag() {\n    return [] as WatchStopHandle[];\n}\n\nexport function disWatch(disposeBag: WatchStopHandle[]) {\n    while(disposeBag.length) {\n        disposeBag.pop()?.();\n    }\n}\n\n// overload: array of multiple sources + cb\nexport function watch<\n    T extends MultiWatchSources,\n    Immediate extends Readonly<boolean> = false\n>(\n    sources: [...T],\n    cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\n    options?: WatchOptions<Immediate>\n): DisposeCallback;\n\n// overload: multiple sources w/ `as const`\n// watch([foo, bar] as const, () => {})\n// somehow [...T] breaks when the type is readonly\nexport function watch<\n    T extends Readonly<MultiWatchSources>,\n    Immediate extends Readonly<boolean> = false\n>(\n    source: T,\n    cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\n    options?: WatchOptions<Immediate>\n): DisposeCallback;\n\n// overload: single source + cb\nexport function watch<T, Immediate extends Readonly<boolean> = false>(\n    source: WatchSource<T>,\n    cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n    options?: WatchOptions<Immediate>\n): DisposeCallback;\n\n// overload: watching reactive object w/ cb\nexport function watch<\n    T extends object,\n    Immediate extends Readonly<boolean> = false\n>(\n    source: T,\n    cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\n    options?: WatchOptions<Immediate>\n): DisposeCallback;\n\n// implementation\nexport function watch<T = any, Immediate extends Readonly<boolean> = false>(\n    source: T | WatchSource<T>,\n    cb: any,\n    options?: WatchOptions<Immediate>\n): DisposeCallback {\n    return doWatch(source as any, cb, options);\n}\n\nexport const watchFixed: typeof watch = function(source: any, cb: any, options = {}) {\n    return watch(source, cb, {\n        ...options,\n        fixed: true\n    });\n};\n\nexport function awaitRefChanged<T>(refValue: Ref<T>) {\n    return new Promise<{ newValue: T, oldValue: T }>(resolve => {\n        const clearWatch = watch(refValue, (newValue, oldValue) => {\n            resolve({\n                newValue,\n                oldValue\n            });\n            clearWatch();\n        });\n    });\n}\n\nfunction doWatch(\n    source: WatchSource | WatchSource[] | WatchEffect | object,\n    cb: WatchCallback,\n    { immediate, deep: _deep, onTrack, onTrigger, fixed }: WatchOptions = EMPTY_OBJ\n): DisposeCallback {\n    let deep = _deep;\n    const warnInvalidSource = (s: unknown) => {\n        console.warn(\n            'Invalid watch source: ',\n            s,\n            'A watch source can only be a getter/effect function, a ref, ' +\n            'a reactive object, or an array of these types.'\n        );\n    };\n\n    let getter: () => any;\n    let forceTrigger = false;\n    let isMultiSource = false;\n    let effect: ReactiveEffect;\n\n    if (isRef(source)) {\n        getter = () => source.value;\n        forceTrigger = isShallow(source);\n    } else if (isReactive(source)) {\n        getter = () => source;\n        deep = true;\n    } else if (isArray(source)) {\n        isMultiSource = true;\n        forceTrigger = source.some(isReactive);\n        getter = () =>\n            source.map(s => {\n                if (isRef(s)) {\n                    return s.value;\n                } else if (isReactive(s)) {\n                    return traverse(s);\n                } else if (isFunction(s)) {\n                    return callWithErrorHandling(s, ErrorCodes.WATCH_GETTER);\n                } else {\n                    __DEVELOPMENT__ && warnInvalidSource(s);\n                }\n            });\n    } else if (isFunction(source)) {\n        getter = () =>\n            callWithErrorHandling(source, ErrorCodes.WATCH_GETTER);\n    } else {\n        getter = NOOP;\n        __DEVELOPMENT__ && warnInvalidSource(source);\n    }\n\n    if (deep) {\n        const baseGetter = getter;\n        getter = () => traverse(baseGetter());\n    }\n\n    let cleanup: () => void;\n    let onInvalidate: InvalidateCbRegistrator = (fn: () => void) => {\n        cleanup = effect.onStop = () => {\n            callWithErrorHandling(fn, ErrorCodes.WATCH_CLEANUP);\n        };\n    };\n\n    let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\n    const job = () => {\n        if (!effect.active) {\n            return;\n        }\n        if (cb) {\n            // watch(source, cb)\n            const newValue = effect.run();\n            if (\n                deep ||\n                forceTrigger ||\n                (isMultiSource\n                    ? (newValue as any[]).some((v, i) =>\n                        hasChanged(v, (oldValue as any[])[i]))\n                    : hasChanged(newValue, oldValue)\n                )\n            ) {\n                // cleanup before running cb again\n                if (cleanup) {\n                    cleanup();\n                }\n                callWithAsyncErrorHandling(cb, ErrorCodes.WATCH_CALLBACK, [\n                    newValue,\n                    // pass undefined as the old value when it's changed for the first time\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\n                    onInvalidate\n                ]);\n                oldValue = newValue;\n            }\n        } else {\n            // watchEffect\n            effect.run();\n        }\n    };\n\n    // important: mark the job as a watcher callback so that scheduler knows\n    // it is allowed to self-trigger (#1727)\n    job.allowRecurse = !!cb;\n\n    let scheduler: EffectScheduler = job;\n\n    const effectScope = fixed ? window.gtLibTsScope?.fixedScope?.effectScope : window.gtLibTsScope?.globalScope?.effectScope;\n    effect = new ReactiveEffect(getter, scheduler, effectScope);\n\n    if (__DEVELOPMENT__) {\n        effect.onTrack = onTrack;\n        effect.onTrigger = onTrigger;\n    }\n\n    // initial run\n    if (immediate) {\n        job();\n    } else {\n        oldValue = effect.run();\n    }\n\n    return (disposeBag?: WatchStopHandle[]) => {\n        if (disposeBag) {\n            disposeBag.push(() => {\n                effect.stop();\n            });\n        } else {\n            effect.stop();\n        }\n    };\n}\n\nfunction traverse(value: unknown, _seen?: Set<unknown>) {\n    if (!isObject(value) || (value as any)['__v_skip']) {\n        return value;\n    }\n    const seen = _seen || new Set();\n    if (seen.has(value)) {\n        return value;\n    }\n    seen.add(value);\n    if (isRef(value)) {\n        traverse(value.value, seen);\n    } else if (isArray(value)) {\n        for (let i = 0; i < value.length; i++) {\n            traverse(value[i], seen);\n        }\n    } else if (isSet(value) || isMap(value)) {\n        value.forEach((v: any) => {\n            traverse(v, seen);\n        });\n    } else if (isPlainObject(value)) {\n        Object.keys(value).forEach(key => {\n            traverse((value as any)[key], seen);\n        });\n    }\n    return value;\n}\n\nexport function computed<T>(getter: ComputedGetter<T>, debugOptions?: DebuggerOptions & { fixed?: boolean }): ComputedRef<T>;\nexport function computed<T>(options: WritableComputedOptions<T>, debugOptions?: DebuggerOptions & { fixed?: boolean }): WritableComputedRef<T>;\nexport function computed<T>(optionsOrGetter: ComputedGetter<T> | WritableComputedOptions<T>, debugOptions?: DebuggerOptions & { fixed?: boolean; }): ComputedRef<T> | WritableComputedRef<T> {\n    const computedResult: ComputedRef<T> | WritableComputedRef<T> = _computed(optionsOrGetter as any, debugOptions);\n\n    const disposeBag = debugOptions?.fixed\n        ? window.gtLibTsScope?.fixedScope?.disposeBag\n        : window.gtLibTsScope?.globalScope?.disposeBag;\n\n    disposeBag?.push(() => {\n        computedResult.effect.stop();\n    });\n\n    return computedResult;\n}\n\nexport const computedFixed: typeof computed = function(optionsOrGetter, debugOptions) {\n    return computed(optionsOrGetter as any, {\n        ...debugOptions,\n        fixed: true\n    });\n};\n\nexport function effect<T = any>(fn: () => T, options?: ReactiveEffectOptions & { fixed?: boolean; }): ReactiveEffectRunner {\n    const effectResult = _effect(fn, options);\n\n    const disposeBag = options?.fixed\n        ? window.gtLibTsScope?.fixedScope?.disposeBag\n        : window.gtLibTsScope?.globalScope?.disposeBag;\n\n    disposeBag?.push(() => {\n        effectResult.effect.stop();\n    });\n\n    return effectResult;\n}\n\nexport const effectFixed: typeof effect = function(fn, options = {}) {\n    return effect(fn as any, {\n        ...options,\n        fixed: true\n    });\n};\n\nif (!window.gtLibTsScope?.fixedScope) {\n    (window.gtLibTsScope ??= {}).fixedScope = {\n        effectScope: new EffectScope(),\n        disposeBag: []\n    };\n}\n\nif (!window.gtLibTsScope?.fixedScope) {\n    (window.gtLibTsScope ??= {}).fixedScope = {\n        effectScope: new EffectScope(),\n        disposeBag: []\n    };\n}"],"names":["getUrlQuery","_a","_b","_c","_d","effect","isRef","isShallow","isReactive","effectScope","ReactiveEffect","_computed","_effect","EffectScope"],"mappings":"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"}