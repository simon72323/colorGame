{"version":3,"file":"index.js","sources":["../../../../packages/eventDispatcher/index.ts"],"sourcesContent":["export type StopListenerHandle = () => void;\nexport type DisposeCallback = StopListenerHandle | ((disposeBag?: StopListenerHandle[]) => void);\nexport type EventCallbackParam = Record<string, any> | undefined;\nexport type EventCallback<T extends EventCallbackParam = EventCallbackParam> = (param: T) => void | Promise<void>;\nexport type EventMap = { [key: string]: EventCallbackParam };\nexport type ListenerItem = {\n    exec: EventCallback;\n    once: boolean;\n}\n\nexport function createDisposeBag() {\n    return [] as StopListenerHandle[];\n}\n\n/** 觸發並清空所有的dispose */\nexport function clearDisposeBag(disposeBag: StopListenerHandle[]) {\n    while(disposeBag.length) {\n        disposeBag.pop()?.();\n    }\n}\n\nexport class EventDispatcherCore<EM extends EventMap = EventMap> {\n    private eventStack: Record<string, ListenerItem[]> = {};\n\n    public addEventListener<T extends string>(eventName: T, callback: T extends Extract<keyof EM, string> ? EventCallback<EM[T]> : EventCallback, option?: { once?: boolean; fixed?: boolean; }): DisposeCallback {\n        const { once = false, fixed = false } = (option ?? {});\n        if (!this.hasEventListener(eventName, callback)) {\n            this.eventStack[eventName] ??= [];\n            this.eventStack[eventName].push({\n                once,\n                exec: callback as EventCallback\n            });\n        }\n\n        const scopeDisposeBag = fixed ? window.gtLibTsScope?.fixedScope?.disposeBag : window.gtLibTsScope?.globalScope?.disposeBag;\n        const globalDispose = () => {\n            this.removeEventListener(eventName, callback);\n        };\n        scopeDisposeBag?.push(globalDispose);\n\n        return (disposeBag?: StopListenerHandle[]) => {\n            if (disposeBag) {\n                disposeBag.push(() => {\n                    this.removeEventListener(eventName, callback);\n\n                    const findGlobalIndex = scopeDisposeBag?.findIndex(globalDispose);\n                    if (findGlobalIndex && ~findGlobalIndex) {\n                        scopeDisposeBag?.splice(findGlobalIndex, 1);\n                    }\n                });\n            } else {\n                this.removeEventListener(eventName, callback);\n            }\n        };\n    }\n\n    public removeEventListener<T extends string>(eventName: T, callback?: T extends Extract<keyof EM, string> ? EventCallback<EM[T]> : EventCallback) {\n        if (!this.eventStack[eventName]) return;\n\n        if (callback) {\n            this.eventStack[eventName] = this.eventStack[eventName].filter(item => item.exec === callback);\n            return;\n        }\n        this.eventStack[eventName] = [];\n    }\n\n    public hasEventListener<T extends string>(eventName: T, callback?: T extends Extract<keyof EM, string> ? EventCallback<EM[T]> : EventCallback) {\n        if (!this.eventStack[eventName]) return false;\n\n        if (callback) {\n            return !!this.eventStack[eventName].find(item => item.exec === callback);\n        }\n        return !!this.eventStack[eventName].length;\n    }\n\n    public dispatchEvent<T extends string>(eventName: T, param: T extends Extract<keyof EM, string> ? EM[T]: EventCallbackParam): Promise<void>;\n    public dispatchEvent<T extends string>(eventName: T extends Extract<keyof EM, string> ? never : T, param?: EventCallbackParam): Promise<void>;\n    public async dispatchEvent<T extends string>(eventName: T, param: T extends Extract<keyof EM, string> ? EM[T] : EventCallbackParam) {\n        if (!this.eventStack[eventName]) return;\n\n        await Promise.all(this.eventStack[eventName].map(item => item.exec(param)));\n        this.eventStack[eventName] = this.eventStack[eventName].filter(item => !item.once);\n    }\n}\n\nexport function useGlobalEventDispatcher<EM extends EventMap = EventMap>(): EventDispatcherCore<EM> {\n    if (window.gtLibTsScope?.eventDispatcher) {\n        return window.gtLibTsScope.eventDispatcher as any;\n    }\n    return ((window.gtLibTsScope ??= {}).eventDispatcher as any) = new EventDispatcherCore<EM>();\n}"],"names":[],"mappings":"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"}