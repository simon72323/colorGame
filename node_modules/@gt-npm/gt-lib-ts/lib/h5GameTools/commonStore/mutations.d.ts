import type { StoreState, FinalStoreState } from './state';
export declare function useMutations(state: FinalStoreState): {
    setData<T extends keyof StoreState>(key: T, value: StoreState[T]): void;
    setData<T extends string>(key: T extends keyof StoreState ? never : T, value: any): void;
    initState(): void;
    onBeginGame(data: any): void;
    onUpdateJP(data: number | string[]): void;
    onUpdateMarquee(data: string): void;
    onGetMachineList(data: any): void;
    onLogin(data: StoreState.LoginData): void;
    onTakeMachine(data: any): void;
    onOnLoadInfo(data: StoreState.LoadInfoData): void;
    onGetMachineDetail(data: StoreState.MachineDetailData): void;
    onCreditExchange(data: StoreState.CreditExchangeData): void;
    onBalanceExchange(data: StoreState.BalanceExchangeData): void;
    onHitJackpot(data: StoreState.HitJackpotData): void;
    onEndGame(data: {
        Credit: string | number;
    }): void;
    onKeepMachineStatus(data: any): void;
    onDoubleGame(data: any): void;
    /** 設置押線 */
    setLine(line: number): void;
    /** 設置線注 */
    setLineBet(lineBet: number): void;
    /** 設為最大押注 */
    setMaxBet(): void;
};
