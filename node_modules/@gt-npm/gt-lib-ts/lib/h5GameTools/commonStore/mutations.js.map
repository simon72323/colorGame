{"version":3,"file":"mutations.js","sources":["../../../../../packages/h5GameTools/commonStore/mutations.ts"],"sourcesContent":["import { Logger } from '@gtLibTs/logger';\n\nimport type { StoreState, FinalStoreState } from './state';\n\nexport function useMutations(state: FinalStoreState) {\n    class Mutations {\n        setData<T extends keyof StoreState>(key: T, value: StoreState[T]): void;\n        setData<T extends string>(key: T extends  keyof StoreState ? never : T, value: any): void;\n        setData<T extends string>(key: T, value: T extends keyof StoreState ? StoreState[T] : any) {\n            state[key] = value;\n        }\n\n        initState() {\n            state.payoff = 0;\n            state.cards = [];\n            state.lines = '';\n            state.scatter = '';\n            state.bonus = '';\n            state.free = '';\n            state.winJPType = 0;\n            state.winJPAmount = 0;\n        }\n\n        onBeginGame(data: any) {\n            Logger.log('[CommonStore::onBegingame]', data);\n\n            state.creditEnd = data.Credit_End ?? state.creditEnd;\n            state.freeTimes = parseInt(data.FreeTime ?? state.freeTimes);\n            state.doubleTime = parseInt(data.DoubleTime ?? state.doubleTime);\n            state.bet = parseFloat(data.BetTotal ?? state.bet);\n            state.credit = parseFloat(data.Credit ?? state.credit);\n            state.levelID = data.LevelID ?? state.levelID;\n            state.brickNum = data.BrickNum ?? state.brickNum;\n            state.wagersID = data.WagersID ?? state.wagersID;\n            state.cards = data.Cards ?? state.cards;\n            state.payoff = data.LinePayoff ?? state.payoff;\n            state.lines = data.Lines ?? state.lines;\n            state.scatter = data.Scatter ?? state.scatter;\n            state.bonus = data.Bonus ?? state.bonus;\n            state.free = data.FreeGame ?? state.free;\n            state.axisLocation = data.AxisLocation ?? state.axisLocation;\n            state.encryID = data.EncryID ?? state.wagersID;\n        }\n\n        onUpdateJP(data: number | string[]) {\n            state.jackpot = data;\n        }\n\n        onUpdateMarquee(data: string) {\n            state.marquee = data;\n        }\n\n        onGetMachineList(data: any) {\n            Logger.log('[CommonStore::onGetMachineList]', data);\n\n            state.machineList = data;\n        }\n\n        onLogin(data: StoreState.LoginData) {\n            state.userID = data.UserID ?? data.userID ?? state.userID;\n        }\n\n        onTakeMachine(data: any) {\n            state.gameCode = data?.data?.gameCode ?? state.gameCode;\n        }\n\n        onOnLoadInfo(data: StoreState.LoadInfoData) {\n            Logger.log('[CommonStore::onOnLoadInfo]', data);\n\n            state.isCash = data.isCash;\n            state.loginName = data.LoginName;\n            state.userID = data.UserID ?? state.userID;\n            state.credit = +data.Credit;\n            state.balance = +data.Balance;\n            state.base = data.Base;\n            state.betBase = data.DefaultBase;\n            state.defaultBase = data.DefaultBase;\n\n            if (data.LeftRound) {\n                state.brickNum = +data.LeftRound.BrickNum;\n                state.levelID = data.LeftRound.LevelID;\n            }\n\n            //判斷有無分數,無分數跳兌換視窗\n            state.betBase = data.BetBase || state.betBase;\n\n            if (data.BetCreditList) {\n                state.betCreditList = data.BetCreditList;\n                state.bet = state.lineBet = data.DefaultBetCredit;\n                state.defaultBetCredit = +data.DefaultBetCredit;\n                state.maxLineBet = data.BetCreditList[data.BetCreditList.length - 1];\n            }\n\n            state.enableBuyFreeGame = data.BuyFree ?? true;\n\n            //for Go+(免開洗分判斷)\n            if (data.UserName) {\n                state.isGCP = true;\n                state.loginName = data.UserName;\n                state.credit = +data.Balance;\n                state.betBase = data.DefaultBase;\n\n                this.initState();\n            }\n            state.currency = data.Currency ?? state.currency;\n            state.noExchange = data.noExchange ?? state.noExchange;\n        }\n\n        onGetMachineDetail(data: StoreState.MachineDetailData) {\n            Logger.log('[CommonStore::onGetMachineDetail]', data);\n\n            state.balance = +data.Balance;\n            state.credit = +data.Credit;\n            state.betBase = data.BetBase;\n            state.base = data.Base;\n        }\n\n        onCreditExchange(data: StoreState.CreditExchangeData) {\n            Logger.log('[CommonStore::onCreditExchange]', data);\n\n            state.balance = +(data.Balance ?? state.balance);\n            state.credit = +(data.Credit ?? state.credit);\n            state.betBase = data.BetBase ?? state.betBase;\n\n            this.initState();\n        }\n\n        onBalanceExchange(data: StoreState.BalanceExchangeData) {\n            Logger.log('[CommonStore::onBalanceExchange]', data);\n\n            state.exchangeCredit = +data.TransCredit;\n            state.exchangeAmount = +data.Amount;\n            state.balance = +data.Balance;\n            state.credit = 0;\n            state.betBase = '';\n\n            this.initState();\n        }\n\n        onHitJackpot(data: StoreState.HitJackpotData) {\n            Logger.log('[CommonStore::onBalanceExchange]', data);\n\n            state.winJPType = +data.JPType as StoreState.WinJPType;\n            state.winJPAmount = +data.JPAmount;\n\n            this.onBeginGame(data.beginGameResult.data);\n        }\n\n        onEndGame(data: { Credit: string | number; }) {\n            Logger.log('[CommonStore::onEndGame]', data);\n\n            state.credit = +data.Credit;\n\n            this.initState();\n        }\n\n        onKeepMachineStatus(data: any) {\n            Logger.log('[CommonStore::onKeepMachineStatus]', data);\n        }\n\n        onDoubleGame(data: any) {\n            Logger.log('[CommonStore::onDoubleGame]', data);\n        }\n\n        /** 設置押線 */\n        setLine(line: number) {\n            state.line = line;\n        }\n\n        /** 設置線注 */\n        setLineBet(lineBet: number) {\n            state.lineBet = lineBet;\n        }\n\n        /** 設為最大押注 */\n        setMaxBet() {\n            state.line = state.maxLine;\n            state.lineBet = state.maxLineBet;\n        }\n    }\n\n    return new Mutations();\n}"],"names":["Logger"],"mappings":"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"}