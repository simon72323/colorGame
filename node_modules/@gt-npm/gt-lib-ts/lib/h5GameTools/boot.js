'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index$1 = require('../logger/index.js');
var detectDevice = require('../utils/detectDevice.js');
var urlUtils = require('../utils/urlUtils.js');
var VConsole = require('vconsole');
var index = require('./commonStore/index.js');
var urlHelper = require('./urlHelper.js');

function addVConsole() {
  const betaAIO = detectDevice.DetectDevice.isAIO && urlHelper.UrlHelper.shared.domain.includes("game2.casinovir999.net");
  if (urlUtils.getUrlQuery("console") === "1" || betaAIO) {
    const vConsole = new VConsole();
    if (betaAIO) {
      let count = 0;
      let timer = 0;
      const toggleTarget = {
        _status: false,
        get status() {
          return this._status;
        },
        set status(val) {
          this._status = val;
          val ? vConsole.showSwitch() : vConsole.hideSwitch();
        },
        toggle() {
          this.status = !this.status;
        }
      };
      const touchHandler = (e) => {
        if (e.touches.length !== 4) return;
        timer && clearTimeout(timer);
        if (count++ === 4) {
          toggleTarget.toggle();
          count = 0;
          return;
        }
        timer = setTimeout(() => count = 0, 1e3);
      };
      toggleTarget.status = false;
      document.addEventListener("touchstart", touchHandler);
    }
  }
}
async function getI18n() {
  try {
    const url = `${urlHelper.UrlHelper.shared.domain}/ipl/app/flash/pig/game/common/dict/${urlHelper.UrlHelper.shared.lang}.json?v=${Date.now()}`;
    const i18n = await (await fetch(url)).json();
    index.CommonStore.shared.storeMutation.setData("i18n", i18n);
  } catch (e) {
    index$1.Logger.error(e);
  }
}
async function boot() {
  var _a, _b;
  if ((_a = window.gtLibTsScope) == null ? void 0 : _a.awaitH5GameToolsReady) return window.gtLibTsScope.awaitH5GameToolsReady;
  return ((_b = window.gtLibTsScope) != null ? _b : window.gtLibTsScope = {}).awaitH5GameToolsReady = Promise.all([
    index.CommonStore.shared.boot(),
    getI18n(),
    addVConsole()
  ]);
}

exports.default = boot;
//# sourceMappingURL=boot.js.map
