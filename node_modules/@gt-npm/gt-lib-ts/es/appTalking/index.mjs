import { AppTalkingAio } from './appTalkingAio.mjs';
export { AppTalkingBase } from './appTalkingBase.mjs';

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
const _AppTalking = class _AppTalking {
  constructor() {
    __publicField(this, "appTalkingCore", new AppTalkingAio());
  }
  customAppTalkingCore(appTalkingCore) {
    this.appTalkingCore = appTalkingCore;
  }
  onLoaded() {
    this.appTalkingCore.onLoaded();
  }
  leaveGame(logout) {
    this.appTalkingCore.leaveGame(logout);
  }
  open_hall() {
    this.appTalkingCore.open_hall();
  }
  startApp(_app) {
    this.appTalkingCore.startApp(_app);
  }
  checkAppStatus(_apps) {
    this.appTalkingCore.checkAppStatus(_apps);
  }
  closeWebView() {
    this.appTalkingCore.closeWebView();
  }
  startBrowser(_root) {
    this.appTalkingCore.startBrowser(_root);
  }
  closePayOnline() {
    this.appTalkingCore.closePayOnline();
  }
  registerSuccess() {
    this.appTalkingCore.registerSuccess();
  }
  accountSuspended() {
    this.appTalkingCore.accountSuspended();
  }
  maintaining() {
    this.appTalkingCore.maintaining();
  }
  notOpen() {
    this.appTalkingCore.notOpen();
  }
  bound() {
    this.appTalkingCore.bound();
  }
  signIn() {
    this.appTalkingCore.signIn();
  }
  showWebGLNoSupport() {
    this.appTalkingCore.showWebGLNoSupport();
  }
  exit(method) {
    switch (method) {
      case "logout":
        this.leaveGame(true);
        return true;
      case "maintain":
        this.maintaining();
        return true;
      case "accountSuspended":
        this.accountSuspended();
        return true;
      case "exit":
        this.leaveGame();
        return true;
      default:
        return false;
    }
  }
};
__publicField(_AppTalking, "shared", new _AppTalking());
let AppTalking = _AppTalking;

export { AppTalking, AppTalkingAio };
//# sourceMappingURL=index.mjs.map
