var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
const _Logger = class _Logger {
  static debug(...param) {
    if (!_Logger.debugSwitch) return;
    const baseMessage = ["%c", "%s", "%c"];
    const messageItem = [
      "background: #4081C6; color: #FFF; padding: 1px;",
      `${param.length > 1 ? param.shift() : "DebugMessage"}`,
      "background:  #10A6AB; color: #FFF; padding: 1px;"
    ];
    param.forEach((item) => {
      if (typeof item === "object") {
        baseMessage.push("%O");
      } else {
        baseMessage.push("%s");
      }
      messageItem.push(item);
    });
    console.log(`${baseMessage.join(" ")} `, ...messageItem);
  }
  static log(...param) {
    console.log(...param);
  }
  static warn(...params) {
    console.warn(...params);
  }
  static error(...params) {
    console.error(...params);
  }
};
__publicField(_Logger, "debugSwitch", true);
let Logger = _Logger;

export { Logger };
//# sourceMappingURL=index.mjs.map
