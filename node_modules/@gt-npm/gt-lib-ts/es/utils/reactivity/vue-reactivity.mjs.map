{"version":3,"file":"vue-reactivity.mjs","sources":["../../../../../packages/utils/reactivity/vue-reactivity.js"],"sourcesContent":["/**\n * Make a map and return a function for checking if a key\n * is in that map.\n * IMPORTANT: all calls of this function must be prefixed with\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\n * So that rollup can tree-shake them if necessary.\n */\nfunction makeMap(str, expectsLowerCase) {\n    const map = Object.create(null);\n    const list = str.split(',');\n    for (let i = 0; i < list.length; i++) {\n        map[list[i]] = true;\n    }\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\n}\n\nconst extend = Object.assign;\nconst hasOwnProperty$1 = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty$1.call(val, key);\nconst isArray = Array.isArray;\nconst isMap = val => toTypeString(val) === '[object Map]';\nconst isFunction = val => typeof val === 'function';\nconst isString = val => typeof val === 'string';\nconst isSymbol = val => typeof val === 'symbol';\nconst isObject = val => val !== null && typeof val === 'object';\nconst objectToString = Object.prototype.toString;\nconst toTypeString = value => objectToString.call(value);\nconst toRawType = value =>\n    // extract \"RawType\" from strings like \"[object RawType]\"\n    toTypeString(value).slice(8, -1)\n;\nconst isIntegerKey = key => isString(key) &&\n    key !== 'NaN' &&\n    key[0] !== '-' &&\n    '' + parseInt(key, 10) === key;\nconst cacheStringFunction = fn => {\n    const cache = Object.create(null);\n    return (str => {\n        const hit = cache[str];\n        return hit || (cache[str] = fn(str));\n    });\n};\n/**\n * @private\n */\nconst capitalize = cacheStringFunction(str => str.charAt(0).toUpperCase() + str.slice(1));\n// compare whether a value has changed, accounting for NaN.\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\nconst def = (obj, key, value) => {\n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable: false,\n        value\n    });\n};\n\nfunction warn(msg, ...args) {\n    console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\nclass EffectScope {\n    constructor(detached = false) {\n        this.detached = detached;\n        /**\n         * @internal\n         */\n        this._active = true;\n        /**\n         * @internal\n         */\n        this.effects = [];\n        /**\n         * @internal\n         */\n        this.cleanups = [];\n        this.parent = activeEffectScope;\n        if (!detached && activeEffectScope) {\n            this.index =\n                (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\n        }\n    }\n\n    get active() {\n        return this._active;\n    }\n\n    run(fn) {\n        if (this._active) {\n            const currentEffectScope = activeEffectScope;\n            try {\n                activeEffectScope = this;\n                return fn();\n            }\n            finally {\n                activeEffectScope = currentEffectScope;\n            }\n        }\n        else {\n            warn('cannot run an inactive effect scope.');\n        }\n    }\n\n    /**\n     * This should only be called on non-detached scopes\n     * @internal\n     */\n    on() {\n        activeEffectScope = this;\n    }\n\n    /**\n     * This should only be called on non-detached scopes\n     * @internal\n     */\n    off() {\n        activeEffectScope = this.parent;\n    }\n\n    stop(fromParent) {\n        if (this._active) {\n            let i, l;\n            for (i = 0, l = this.effects.length; i < l; i++) {\n                this.effects[i].stop();\n            }\n            for (i = 0, l = this.cleanups.length; i < l; i++) {\n                this.cleanups[i]();\n            }\n            if (this.scopes) {\n                for (i = 0, l = this.scopes.length; i < l; i++) {\n                    this.scopes[i].stop(true);\n                }\n            }\n            // nested scope, dereference from parent to avoid memory leaks\n            if (!this.detached && this.parent && !fromParent) {\n                // optimized O(1) removal\n                const last = this.parent.scopes.pop();\n                if (last && last !== this) {\n                    this.parent.scopes[this.index] = last;\n                    last.index = this.index;\n                }\n            }\n            this.parent = undefined;\n            this._active = false;\n        }\n    }\n}\nfunction effectScope(detached) {\n    return new EffectScope(detached);\n}\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n    if (scope && scope.active) {\n        scope.effects.push(effect);\n    }\n}\nfunction getCurrentScope() {\n    return activeEffectScope;\n}\nfunction onScopeDispose(fn) {\n    if (activeEffectScope) {\n        activeEffectScope.cleanups.push(fn);\n    }\n    else {\n        warn('onScopeDispose() is called when there is no active effect scope' +\n            ' to be associated with.');\n    }\n}\n\nconst createDep = effects => {\n    const dep = new Set(effects);\n    dep.w = 0;\n    dep.n = 0;\n    return dep;\n};\nconst wasTracked = dep => (dep.w & trackOpBit) > 0;\nconst newTracked = dep => (dep.n & trackOpBit) > 0;\nconst initDepMarkers = ({ deps }) => {\n    if (deps.length) {\n        for (let i = 0; i < deps.length; i++) {\n            deps[i].w |= trackOpBit; // set was tracked\n        }\n    }\n};\nconst finalizeDepMarkers = effect => {\n    const { deps } = effect;\n    if (deps.length) {\n        let ptr = 0;\n        for (let i = 0; i < deps.length; i++) {\n            const dep = deps[i];\n            if (wasTracked(dep) && !newTracked(dep)) {\n                dep.delete(effect);\n            }\n            else {\n                deps[ptr++] = dep;\n            }\n            // clear bits\n            dep.w &= ~trackOpBit;\n            dep.n &= ~trackOpBit;\n        }\n        deps.length = ptr;\n    }\n};\n\nconst targetMap = new WeakMap();\n// The number of effects currently being tracked recursively.\nlet effectTrackDepth = 0;\nlet trackOpBit = 1;\n/**\n * The bitwise track markers support at most 30 levels of recursion.\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\n * When recursion depth is greater, fall back to using a full cleanup.\n */\nconst maxMarkerBits = 30;\nlet activeEffect;\nconst ITERATE_KEY = Symbol('iterate' );\nconst MAP_KEY_ITERATE_KEY = Symbol('Map key iterate' );\nclass ReactiveEffect {\n    constructor(fn, scheduler = null, scope) {\n        this.fn = fn;\n        this.scheduler = scheduler;\n        this.active = true;\n        this.deps = [];\n        this.parent = undefined;\n        recordEffectScope(this, scope);\n    }\n\n    run() {\n        if (!this.active) {\n            return this.fn();\n        }\n        let parent = activeEffect;\n        let lastShouldTrack = shouldTrack;\n        while (parent) {\n            if (parent === this) {\n                return;\n            }\n            parent = parent.parent;\n        }\n        try {\n            this.parent = activeEffect;\n            activeEffect = this;\n            shouldTrack = true;\n            trackOpBit = 1 << ++effectTrackDepth;\n            if (effectTrackDepth <= maxMarkerBits) {\n                initDepMarkers(this);\n            }\n            else {\n                cleanupEffect(this);\n            }\n            return this.fn();\n        }\n        finally {\n            if (effectTrackDepth <= maxMarkerBits) {\n                finalizeDepMarkers(this);\n            }\n            trackOpBit = 1 << --effectTrackDepth;\n            activeEffect = this.parent;\n            shouldTrack = lastShouldTrack;\n            this.parent = undefined;\n            if (this.deferStop) {\n                this.stop();\n            }\n        }\n    }\n\n    stop() {\n        // stopped while running itself - defer the cleanup\n        if (activeEffect === this) {\n            this.deferStop = true;\n        }\n        else if (this.active) {\n            cleanupEffect(this);\n            if (this.onStop) {\n                this.onStop();\n            }\n            this.active = false;\n        }\n    }\n}\nfunction cleanupEffect(effect) {\n    const { deps } = effect;\n    if (deps.length) {\n        for (let i = 0; i < deps.length; i++) {\n            deps[i].delete(effect);\n        }\n        deps.length = 0;\n    }\n}\nfunction effect(fn, options) {\n    if (fn.effect) {\n        fn = fn.effect.fn;\n    }\n    const _effect = new ReactiveEffect(fn);\n    if (options) {\n        extend(_effect, options);\n        if (options.scope)\n            recordEffectScope(_effect, options.scope);\n    }\n    if (!options || !options.lazy) {\n        _effect.run();\n    }\n    const runner = _effect.run.bind(_effect);\n    runner.effect = _effect;\n    return runner;\n}\nfunction stop(runner) {\n    runner.effect.stop();\n}\nlet shouldTrack = true;\nconst trackStack = [];\nfunction pauseTracking() {\n    trackStack.push(shouldTrack);\n    shouldTrack = false;\n}\nfunction enableTracking() {\n    trackStack.push(shouldTrack);\n    shouldTrack = true;\n}\nfunction resetTracking() {\n    const last = trackStack.pop();\n    shouldTrack = last === undefined ? true : last;\n}\nfunction track(target, type, key) {\n    if (shouldTrack && activeEffect) {\n        let depsMap = targetMap.get(target);\n        if (!depsMap) {\n            targetMap.set(target, (depsMap = new Map()));\n        }\n        let dep = depsMap.get(key);\n        if (!dep) {\n            depsMap.set(key, (dep = createDep()));\n        }\n        const eventInfo = { effect: activeEffect, target, type, key }\n            ;\n        trackEffects(dep, eventInfo);\n    }\n}\nfunction trackEffects(dep, debuggerEventExtraInfo) {\n    let shouldTrack = false;\n    if (effectTrackDepth <= maxMarkerBits) {\n        if (!newTracked(dep)) {\n            dep.n |= trackOpBit; // set newly tracked\n            shouldTrack = !wasTracked(dep);\n        }\n    }\n    else {\n        // Full cleanup mode.\n        shouldTrack = !dep.has(activeEffect);\n    }\n    if (shouldTrack) {\n        dep.add(activeEffect);\n        activeEffect.deps.push(dep);\n        if (activeEffect.onTrack) {\n            activeEffect.onTrack(Object.assign({ effect: activeEffect }, debuggerEventExtraInfo));\n        }\n    }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n    const depsMap = targetMap.get(target);\n    if (!depsMap) {\n        // never been tracked\n        return;\n    }\n    let deps = [];\n    if (type === 'clear' /* TriggerOpTypes.CLEAR */) {\n        // collection being cleared\n        // trigger all effects for target\n        deps = [...depsMap.values()];\n    }\n    else if (key === 'length' && isArray(target)) {\n        const newLength = Number(newValue);\n        depsMap.forEach((dep, key) => {\n            if (key === 'length' || key >= newLength) {\n                deps.push(dep);\n            }\n        });\n    }\n    else {\n        // schedule runs for SET | ADD | DELETE\n        if (key !== void 0) {\n            deps.push(depsMap.get(key));\n        }\n        // also run for iteration key on ADD | DELETE | Map.SET\n        switch (type) {\n            case 'add' /* TriggerOpTypes.ADD */:\n                if (!isArray(target)) {\n                    deps.push(depsMap.get(ITERATE_KEY));\n                    if (isMap(target)) {\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n                    }\n                }\n                else if (isIntegerKey(key)) {\n                    // new index added to array -> length changes\n                    deps.push(depsMap.get('length'));\n                }\n                break;\n            case 'delete' /* TriggerOpTypes.DELETE */:\n                if (!isArray(target)) {\n                    deps.push(depsMap.get(ITERATE_KEY));\n                    if (isMap(target)) {\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n                    }\n                }\n                break;\n            case 'set' /* TriggerOpTypes.SET */:\n                if (isMap(target)) {\n                    deps.push(depsMap.get(ITERATE_KEY));\n                }\n                break;\n        }\n    }\n    const eventInfo = { target, type, key, newValue, oldValue, oldTarget }\n        ;\n    if (deps.length === 1) {\n        if (deps[0]) {\n            {\n                triggerEffects(deps[0], eventInfo);\n            }\n        }\n    }\n    else {\n        const effects = [];\n        for (const dep of deps) {\n            if (dep) {\n                effects.push(...dep);\n            }\n        }\n        {\n            triggerEffects(createDep(effects), eventInfo);\n        }\n    }\n}\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\n    // spread into array for stabilization\n    const effects = isArray(dep) ? dep : Array.from(dep);\n    for (const effect of effects) {\n        if (effect.computed) {\n            triggerEffect(effect, debuggerEventExtraInfo);\n        }\n    }\n    for (const effect of effects) {\n        if (!effect.computed) {\n            triggerEffect(effect, debuggerEventExtraInfo);\n        }\n    }\n}\nfunction triggerEffect(effect, debuggerEventExtraInfo) {\n    if (effect !== activeEffect || effect.allowRecurse) {\n        if (effect.onTrigger) {\n            effect.onTrigger(extend({ effect }, debuggerEventExtraInfo));\n        }\n        if (effect.scheduler) {\n            effect.scheduler();\n        }\n        else {\n            effect.run();\n        }\n    }\n}\nfunction getDepFromReactive(object, key) {\n    var _a;\n    return (_a = targetMap.get(object)) === null || _a === void 0 ? void 0 : _a.get(key);\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap('__proto__,__v_isRef,__isVue');\nconst builtInSymbols = new Set(\n/*#__PURE__*/\n    Object.getOwnPropertyNames(Symbol)\n    // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\n    // but accessing them on Symbol leads to TypeError because Symbol is a strict mode\n    // function\n        .filter(key => key !== 'arguments' && key !== 'caller')\n        .map(key => Symbol[key])\n        .filter(isSymbol));\nconst get$1 = /*#__PURE__*/ createGetter();\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\nfunction createArrayInstrumentations() {\n    const instrumentations = {};\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\n        instrumentations[key] = function (...args) {\n            const arr = toRaw(this);\n            for (let i = 0, l = this.length; i < l; i++) {\n                track(arr, 'get' /* TrackOpTypes.GET */, i + '');\n            }\n            // we run the method using the original args first (which may be reactive)\n            const res = arr[key](...args);\n            if (res === -1 || res === false) {\n                // if that didn't work, run it again using raw values.\n                return arr[key](...args.map(toRaw));\n            }\n            else {\n                return res;\n            }\n        };\n    });\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\n        instrumentations[key] = function (...args) {\n            pauseTracking();\n            const res = toRaw(this)[key].apply(this, args);\n            resetTracking();\n            return res;\n        };\n    });\n    return instrumentations;\n}\nfunction hasOwnProperty(key) {\n    const obj = toRaw(this);\n    track(obj, 'has' /* TrackOpTypes.HAS */, key);\n    return obj.hasOwnProperty(key);\n}\nfunction createGetter(isReadonly = false, shallow = false) {\n    return function get(target, key, receiver) {\n        if (key === '__v_isReactive' /* ReactiveFlags.IS_REACTIVE */) {\n            return !isReadonly;\n        }\n        else if (key === '__v_isReadonly' /* ReactiveFlags.IS_READONLY */) {\n            return isReadonly;\n        }\n        else if (key === '__v_isShallow' /* ReactiveFlags.IS_SHALLOW */) {\n            return shallow;\n        }\n        else if (key === '__v_raw' /* ReactiveFlags.RAW */ &&\n            receiver ===\n                (isReadonly\n                    ? shallow\n                        ? shallowReadonlyMap\n                        : readonlyMap\n                    : shallow\n                        ? shallowReactiveMap\n                        : reactiveMap).get(target)) {\n            return target;\n        }\n        const targetIsArray = isArray(target);\n        if (!isReadonly) {\n            if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\n                return Reflect.get(arrayInstrumentations, key, receiver);\n            }\n            if (key === 'hasOwnProperty') {\n                return hasOwnProperty;\n            }\n        }\n        const res = Reflect.get(target, key, receiver);\n        if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n            return res;\n        }\n        if (!isReadonly) {\n            track(target, 'get' /* TrackOpTypes.GET */, key);\n        }\n        if (shallow) {\n            return res;\n        }\n        if (isRef(res)) {\n            // ref unwrapping - skip unwrap for Array + integer key.\n            return targetIsArray && isIntegerKey(key) ? res : res.value;\n        }\n        if (isObject(res)) {\n            // Convert returned value into a proxy as well. we do the isObject check\n            // here to avoid invalid value warning. Also need to lazy access readonly\n            // and reactive here to avoid circular dependency.\n            return isReadonly ? readonly(res) : reactive(res);\n        }\n        return res;\n    };\n}\nconst set$1 = /*#__PURE__*/ createSetter();\nconst shallowSet = /*#__PURE__*/ createSetter(true);\nfunction createSetter(shallow = false) {\n    return function set(target, key, value, receiver) {\n        let oldValue = target[key];\n        if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n            return false;\n        }\n        if (!shallow) {\n            if (!isShallow(value) && !isReadonly(value)) {\n                oldValue = toRaw(oldValue);\n                value = toRaw(value);\n            }\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n                oldValue.value = value;\n                return true;\n            }\n        }\n        const hadKey = isArray(target) && isIntegerKey(key)\n            ? Number(key) < target.length\n            : hasOwn(target, key);\n        const result = Reflect.set(target, key, value, receiver);\n        // don't trigger if target is something up in the prototype chain of original\n        if (target === toRaw(receiver)) {\n            if (!hadKey) {\n                trigger(target, 'add' /* TriggerOpTypes.ADD */, key, value);\n            }\n            else if (hasChanged(value, oldValue)) {\n                trigger(target, 'set' /* TriggerOpTypes.SET */, key, value, oldValue);\n            }\n        }\n        return result;\n    };\n}\nfunction deleteProperty(target, key) {\n    const hadKey = hasOwn(target, key);\n    const oldValue = target[key];\n    const result = Reflect.deleteProperty(target, key);\n    if (result && hadKey) {\n        trigger(target, 'delete' /* TriggerOpTypes.DELETE */, key, undefined, oldValue);\n    }\n    return result;\n}\nfunction has$1(target, key) {\n    const result = Reflect.has(target, key);\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\n        track(target, 'has' /* TrackOpTypes.HAS */, key);\n    }\n    return result;\n}\nfunction ownKeys(target) {\n    track(target, 'iterate' /* TrackOpTypes.ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\n    return Reflect.ownKeys(target);\n}\nconst mutableHandlers = {\n    get: get$1,\n    set: set$1,\n    deleteProperty,\n    has: has$1,\n    ownKeys\n};\nconst readonlyHandlers = {\n    get: readonlyGet,\n    set(target, key) {\n        {\n            warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\n        }\n        return true;\n    },\n    deleteProperty(target, key) {\n        {\n            warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\n        }\n        return true;\n    }\n};\nconst shallowReactiveHandlers = /*#__PURE__*/ extend({}, mutableHandlers, {\n    get: shallowGet,\n    set: shallowSet\n});\n// Props handlers are special in the sense that it should not unwrap top-level\n// refs (in order to allow refs to be explicitly passed down), but should\n// retain the reactivity of the normal readonly object.\nconst shallowReadonlyHandlers = /*#__PURE__*/ extend({}, readonlyHandlers, {\n    get: shallowReadonlyGet\n});\n\nconst toShallow = value => value;\nconst getProto = v => Reflect.getPrototypeOf(v);\nfunction get(target, key, isReadonly = false, isShallow = false) {\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\n    // of the value\n    target = target['__v_raw' /* ReactiveFlags.RAW */];\n    const rawTarget = toRaw(target);\n    const rawKey = toRaw(key);\n    if (!isReadonly) {\n        if (key !== rawKey) {\n            track(rawTarget, 'get' /* TrackOpTypes.GET */, key);\n        }\n        track(rawTarget, 'get' /* TrackOpTypes.GET */, rawKey);\n    }\n    const { has } = getProto(rawTarget);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    if (has.call(rawTarget, key)) {\n        return wrap(target.get(key));\n    }\n    else if (has.call(rawTarget, rawKey)) {\n        return wrap(target.get(rawKey));\n    }\n    else if (target !== rawTarget) {\n        // #3602 readonly(reactive(Map))\n        // ensure that the nested reactive `Map` can do tracking for itself\n        target.get(key);\n    }\n}\nfunction has(key, isReadonly = false) {\n    const target = this['__v_raw' /* ReactiveFlags.RAW */];\n    const rawTarget = toRaw(target);\n    const rawKey = toRaw(key);\n    if (!isReadonly) {\n        if (key !== rawKey) {\n            track(rawTarget, 'has' /* TrackOpTypes.HAS */, key);\n        }\n        track(rawTarget, 'has' /* TrackOpTypes.HAS */, rawKey);\n    }\n    return key === rawKey\n        ? target.has(key)\n        : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly = false) {\n    target = target['__v_raw' /* ReactiveFlags.RAW */];\n    !isReadonly && track(toRaw(target), 'iterate' /* TrackOpTypes.ITERATE */, ITERATE_KEY);\n    return Reflect.get(target, 'size', target);\n}\nfunction add(value) {\n    value = toRaw(value);\n    const target = toRaw(this);\n    const proto = getProto(target);\n    const hadKey = proto.has.call(target, value);\n    if (!hadKey) {\n        target.add(value);\n        trigger(target, 'add' /* TriggerOpTypes.ADD */, value, value);\n    }\n    return this;\n}\nfunction set(key, value) {\n    value = toRaw(value);\n    const target = toRaw(this);\n    const { has, get } = getProto(target);\n    let hadKey = has.call(target, key);\n    if (!hadKey) {\n        key = toRaw(key);\n        hadKey = has.call(target, key);\n    }\n    else {\n        checkIdentityKeys(target, has, key);\n    }\n    const oldValue = get.call(target, key);\n    target.set(key, value);\n    if (!hadKey) {\n        trigger(target, 'add' /* TriggerOpTypes.ADD */, key, value);\n    }\n    else if (hasChanged(value, oldValue)) {\n        trigger(target, 'set' /* TriggerOpTypes.SET */, key, value, oldValue);\n    }\n    return this;\n}\nfunction deleteEntry(key) {\n    const target = toRaw(this);\n    const { has, get } = getProto(target);\n    let hadKey = has.call(target, key);\n    if (!hadKey) {\n        key = toRaw(key);\n        hadKey = has.call(target, key);\n    }\n    else {\n        checkIdentityKeys(target, has, key);\n    }\n    const oldValue = get ? get.call(target, key) : undefined;\n    // forward the operation before queueing reactions\n    const result = target.delete(key);\n    if (hadKey) {\n        trigger(target, 'delete' /* TriggerOpTypes.DELETE */, key, undefined, oldValue);\n    }\n    return result;\n}\nfunction clear() {\n    const target = toRaw(this);\n    const hadItems = target.size !== 0;\n    const oldTarget = isMap(target)\n        ? new Map(target)\n        : new Set(target)\n        ;\n    // forward the operation before queueing reactions\n    const result = target.clear();\n    if (hadItems) {\n        trigger(target, 'clear' /* TriggerOpTypes.CLEAR */, undefined, undefined, oldTarget);\n    }\n    return result;\n}\nfunction createForEach(isReadonly, isShallow) {\n    return function forEach(callback, thisArg) {\n        const observed = this;\n        const target = observed['__v_raw' /* ReactiveFlags.RAW */];\n        const rawTarget = toRaw(target);\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n        !isReadonly && track(rawTarget, 'iterate' /* TrackOpTypes.ITERATE */, ITERATE_KEY);\n        return target.forEach((value, key) =>\n            // important: make sure the callback is\n            // 1. invoked with the reactive map as `this` and 3rd arg\n            // 2. the value received should be a corresponding reactive/readonly.\n            callback.call(thisArg, wrap(value), wrap(key), observed)\n        );\n    };\n}\nfunction createIterableMethod(method, isReadonly, isShallow) {\n    return function (...args) {\n        const target = this['__v_raw' /* ReactiveFlags.RAW */];\n        const rawTarget = toRaw(target);\n        const targetIsMap = isMap(rawTarget);\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\n        const isKeyOnly = method === 'keys' && targetIsMap;\n        const innerIterator = target[method](...args);\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n        !isReadonly &&\n            track(rawTarget, 'iterate' /* TrackOpTypes.ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\n        // return a wrapped iterator which returns observed versions of the\n        // values emitted from the real iterator\n        return {\n            // iterator protocol\n            next() {\n                const { value, done } = innerIterator.next();\n                return done\n                    ? { value, done }\n                    : {\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n                        done\n                    };\n            },\n            // iterable protocol\n            [Symbol.iterator]() {\n                return this;\n            }\n        };\n    };\n}\nfunction createReadonlyMethod(type) {\n    return function (...args) {\n        {\n            const key = args[0] ? `on key \"${args[0]}\" ` : '';\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\n        }\n        return type === 'delete' /* TriggerOpTypes.DELETE */ ? false : this;\n    };\n}\nfunction createInstrumentations() {\n    const mutableInstrumentations = {\n        get(key) {\n            return get(this, key);\n        },\n        get size() {\n            return size(this);\n        },\n        has,\n        add,\n        set,\n        delete: deleteEntry,\n        clear,\n        forEach: createForEach(false, false)\n    };\n    const shallowInstrumentations = {\n        get(key) {\n            return get(this, key, false, true);\n        },\n        get size() {\n            return size(this);\n        },\n        has,\n        add,\n        set,\n        delete: deleteEntry,\n        clear,\n        forEach: createForEach(false, true)\n    };\n    const readonlyInstrumentations = {\n        get(key) {\n            return get(this, key, true);\n        },\n        get size() {\n            return size(this, true);\n        },\n        has(key) {\n            return has.call(this, key, true);\n        },\n        add: createReadonlyMethod('add' /* TriggerOpTypes.ADD */),\n        set: createReadonlyMethod('set' /* TriggerOpTypes.SET */),\n        delete: createReadonlyMethod('delete' /* TriggerOpTypes.DELETE */),\n        clear: createReadonlyMethod('clear' /* TriggerOpTypes.CLEAR */),\n        forEach: createForEach(true, false)\n    };\n    const shallowReadonlyInstrumentations = {\n        get(key) {\n            return get(this, key, true, true);\n        },\n        get size() {\n            return size(this, true);\n        },\n        has(key) {\n            return has.call(this, key, true);\n        },\n        add: createReadonlyMethod('add' /* TriggerOpTypes.ADD */),\n        set: createReadonlyMethod('set' /* TriggerOpTypes.SET */),\n        delete: createReadonlyMethod('delete' /* TriggerOpTypes.DELETE */),\n        clear: createReadonlyMethod('clear' /* TriggerOpTypes.CLEAR */),\n        forEach: createForEach(true, true)\n    };\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\n    iteratorMethods.forEach(method => {\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\n    });\n    return [\n        mutableInstrumentations,\n        readonlyInstrumentations,\n        shallowInstrumentations,\n        shallowReadonlyInstrumentations\n    ];\n}\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly, shallow) {\n    const instrumentations = shallow\n        ? isReadonly\n            ? shallowReadonlyInstrumentations\n            : shallowInstrumentations\n        : isReadonly\n            ? readonlyInstrumentations\n            : mutableInstrumentations;\n    return (target, key, receiver) => {\n        if (key === '__v_isReactive' /* ReactiveFlags.IS_REACTIVE */) {\n            return !isReadonly;\n        }\n        else if (key === '__v_isReadonly' /* ReactiveFlags.IS_READONLY */) {\n            return isReadonly;\n        }\n        else if (key === '__v_raw' /* ReactiveFlags.RAW */) {\n            return target;\n        }\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\n            ? instrumentations\n            : target, key, receiver);\n    };\n}\nconst mutableCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\n};\nfunction checkIdentityKeys(target, has, key) {\n    const rawKey = toRaw(key);\n    if (rawKey !== key && has.call(target, rawKey)) {\n        const type = toRawType(target);\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\n            `versions of the same object${type === 'Map' ? ' as keys' : ''}, ` +\n            'which can lead to inconsistencies. ' +\n            'Avoid differentiating between the raw and reactive versions ' +\n            'of an object and only use the reactive version if possible.');\n    }\n}\n\nconst reactiveMap = new WeakMap();\nconst shallowReactiveMap = new WeakMap();\nconst readonlyMap = new WeakMap();\nconst shallowReadonlyMap = new WeakMap();\nfunction targetTypeMap(rawType) {\n    switch (rawType) {\n        case 'Object':\n        case 'Array':\n            return 1 /* TargetType.COMMON */;\n        case 'Map':\n        case 'Set':\n        case 'WeakMap':\n        case 'WeakSet':\n            return 2 /* TargetType.COLLECTION */;\n        default:\n            return 0 /* TargetType.INVALID */;\n    }\n}\nfunction getTargetType(value) {\n    return value['__v_skip' /* ReactiveFlags.SKIP */] || !Object.isExtensible(value)\n        ? 0 /* TargetType.INVALID */\n        : targetTypeMap(toRawType(value));\n}\nfunction reactive(target) {\n    // if trying to observe a readonly proxy, return the readonly version.\n    if (isReadonly(target)) {\n        return target;\n    }\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\n}\n/**\n * Return a shallowly-reactive copy of the original object, where only the root\n * level properties are reactive. It also does not auto-unwrap refs (even at the\n * root level).\n */\nfunction shallowReactive(target) {\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\n}\n/**\n * Creates a readonly copy of the original object. Note the returned copy is not\n * made reactive, but `readonly` can be called on an already reactive object.\n */\nfunction readonly(target) {\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\n}\n/**\n * Returns a reactive-copy of the original object, where only the root level\n * properties are readonly, and does NOT unwrap refs nor recursively convert\n * returned properties.\n * This is used for creating the props proxy object for stateful components.\n */\nfunction shallowReadonly(target) {\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\n}\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\n    if (!isObject(target)) {\n        {\n            console.warn(`value cannot be made reactive: ${String(target)}`);\n        }\n        return target;\n    }\n    // target is already a Proxy, return it.\n    // exception: calling readonly() on a reactive object\n    if (target['__v_raw' /* ReactiveFlags.RAW */] &&\n        !(isReadonly && target['__v_isReactive' /* ReactiveFlags.IS_REACTIVE */])) {\n        return target;\n    }\n    // target already has corresponding Proxy\n    const existingProxy = proxyMap.get(target);\n    if (existingProxy) {\n        return existingProxy;\n    }\n    // only specific value types can be observed.\n    const targetType = getTargetType(target);\n    if (targetType === 0 /* TargetType.INVALID */) {\n        return target;\n    }\n    const proxy = new Proxy(target, targetType === 2 /* TargetType.COLLECTION */ ? collectionHandlers : baseHandlers);\n    proxyMap.set(target, proxy);\n    return proxy;\n}\nfunction isReactive(value) {\n    if (isReadonly(value)) {\n        return isReactive(value['__v_raw' /* ReactiveFlags.RAW */]);\n    }\n    return !!(value && value['__v_isReactive' /* ReactiveFlags.IS_REACTIVE */]);\n}\nfunction isReadonly(value) {\n    return !!(value && value['__v_isReadonly' /* ReactiveFlags.IS_READONLY */]);\n}\nfunction isShallow(value) {\n    return !!(value && value['__v_isShallow' /* ReactiveFlags.IS_SHALLOW */]);\n}\nfunction isProxy(value) {\n    return isReactive(value) || isReadonly(value);\n}\nfunction toRaw(observed) {\n    const raw = observed && observed['__v_raw' /* ReactiveFlags.RAW */];\n    return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n    def(value, '__v_skip' /* ReactiveFlags.SKIP */, true);\n    return value;\n}\nconst toReactive = value => isObject(value) ? reactive(value) : value;\nconst toReadonly = value => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref) {\n    if (shouldTrack && activeEffect) {\n        ref = toRaw(ref);\n        {\n            trackEffects(ref.dep || (ref.dep = createDep()), {\n                target: ref,\n                type: 'get' /* TrackOpTypes.GET */,\n                key: 'value'\n            });\n        }\n    }\n}\nfunction triggerRefValue(ref, newVal) {\n    ref = toRaw(ref);\n    const dep = ref.dep;\n    if (dep) {\n        {\n            triggerEffects(dep, {\n                target: ref,\n                type: 'set' /* TriggerOpTypes.SET */,\n                key: 'value',\n                newValue: newVal\n            });\n        }\n    }\n}\nfunction isRef(r) {\n    return !!(r && r.__v_isRef === true);\n}\nfunction ref(value) {\n    return createRef(value, false);\n}\nfunction shallowRef(value) {\n    return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n    if (isRef(rawValue)) {\n        return rawValue;\n    }\n    return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n    constructor(value, __v_isShallow) {\n        this.__v_isShallow = __v_isShallow;\n        this.dep = undefined;\n        this.__v_isRef = true;\n        this._rawValue = __v_isShallow ? value : toRaw(value);\n        this._value = __v_isShallow ? value : toReactive(value);\n    }\n\n    get value() {\n        trackRefValue(this);\n        return this._value;\n    }\n\n    set value(newVal) {\n        const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\n        newVal = useDirectValue ? newVal : toRaw(newVal);\n        if (hasChanged(newVal, this._rawValue)) {\n            this._rawValue = newVal;\n            this._value = useDirectValue ? newVal : toReactive(newVal);\n            triggerRefValue(this, newVal);\n        }\n    }\n}\nfunction triggerRef(ref) {\n    triggerRefValue(ref, ref.value );\n}\nfunction unref(ref) {\n    return isRef(ref) ? ref.value : ref;\n}\nconst shallowUnwrapHandlers = {\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n    set: (target, key, value, receiver) => {\n        const oldValue = target[key];\n        if (isRef(oldValue) && !isRef(value)) {\n            oldValue.value = value;\n            return true;\n        }\n        else {\n            return Reflect.set(target, key, value, receiver);\n        }\n    }\n};\nfunction proxyRefs(objectWithRefs) {\n    return isReactive(objectWithRefs)\n        ? objectWithRefs\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n    constructor(factory) {\n        this.dep = undefined;\n        this.__v_isRef = true;\n        const { get, set } = factory(() => trackRefValue(this), () => triggerRefValue(this));\n        this._get = get;\n        this._set = set;\n    }\n\n    get value() {\n        return this._get();\n    }\n\n    set value(newVal) {\n        this._set(newVal);\n    }\n}\nfunction customRef(factory) {\n    return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n    if (!isProxy(object)) {\n        console.warn('toRefs() expects a reactive object but received a plain one.');\n    }\n    const ret = isArray(object) ? new Array(object.length) : {};\n    for (const key in object) {\n        ret[key] = toRef(object, key);\n    }\n    return ret;\n}\nclass ObjectRefImpl {\n    constructor(_object, _key, _defaultValue) {\n        this._object = _object;\n        this._key = _key;\n        this._defaultValue = _defaultValue;\n        this.__v_isRef = true;\n    }\n\n    get value() {\n        const val = this._object[this._key];\n        return val === undefined ? this._defaultValue : val;\n    }\n\n    set value(newVal) {\n        this._object[this._key] = newVal;\n    }\n\n    get dep() {\n        return getDepFromReactive(toRaw(this._object), this._key);\n    }\n}\nfunction toRef(object, key, defaultValue) {\n    const val = object[key];\n    return isRef(val)\n        ? val\n        : new ObjectRefImpl(object, key, defaultValue);\n}\n\nvar _a$1;\nclass ComputedRefImpl {\n    constructor(getter, _setter, isReadonly, isSSR) {\n        this._setter = _setter;\n        this.dep = undefined;\n        this.__v_isRef = true;\n        this[_a$1] = false;\n        this._dirty = true;\n        this.effect = new ReactiveEffect(getter, () => {\n            if (!this._dirty) {\n                this._dirty = true;\n                triggerRefValue(this);\n            }\n        });\n        this.effect.computed = this;\n        this.effect.active = this._cacheable = !isSSR;\n        this['__v_isReadonly' /* ReactiveFlags.IS_READONLY */] = isReadonly;\n    }\n\n    get value() {\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n        const self = toRaw(this);\n        trackRefValue(self);\n        if (self._dirty || !self._cacheable) {\n            self._dirty = false;\n            self._value = self.effect.run();\n        }\n        return self._value;\n    }\n\n    set value(newValue) {\n        this._setter(newValue);\n    }\n}\n_a$1 = '__v_isReadonly' /* ReactiveFlags.IS_READONLY */;\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n    let getter;\n    let setter;\n    const onlyGetter = isFunction(getterOrOptions);\n    if (onlyGetter) {\n        getter = getterOrOptions;\n        setter = () => {\n            console.warn('Write operation failed: computed value is readonly');\n        }\n        ;\n    }\n    else {\n        getter = getterOrOptions.get;\n        setter = getterOrOptions.set;\n    }\n    const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n    if (debugOptions && !isSSR) {\n        cRef.effect.onTrack = debugOptions.onTrack;\n        cRef.effect.onTrigger = debugOptions.onTrigger;\n    }\n    return cRef;\n}\n\nvar _a;\nconst tick = /*#__PURE__*/ Promise.resolve();\nconst queue = [];\nlet queued = false;\nconst scheduler = fn => {\n    queue.push(fn);\n    if (!queued) {\n        queued = true;\n        tick.then(flush);\n    }\n};\nconst flush = () => {\n    for (let i = 0; i < queue.length; i++) {\n        queue[i]();\n    }\n    queue.length = 0;\n    queued = false;\n};\nclass DeferredComputedRefImpl {\n    constructor(getter) {\n        this.dep = undefined;\n        this._dirty = true;\n        this.__v_isRef = true;\n        this[_a] = true;\n        let compareTarget;\n        let hasCompareTarget = false;\n        let scheduled = false;\n        this.effect = new ReactiveEffect(getter, computedTrigger => {\n            if (this.dep) {\n                if (computedTrigger) {\n                    compareTarget = this._value;\n                    hasCompareTarget = true;\n                }\n                else if (!scheduled) {\n                    const valueToCompare = hasCompareTarget ? compareTarget : this._value;\n                    scheduled = true;\n                    hasCompareTarget = false;\n                    scheduler(() => {\n                        if (this.effect.active && this._get() !== valueToCompare) {\n                            triggerRefValue(this);\n                        }\n                        scheduled = false;\n                    });\n                }\n                // chained upstream computeds are notified synchronously to ensure\n                // value invalidation in case of sync access; normal effects are\n                // deferred to be triggered in scheduler.\n                for (const e of this.dep) {\n                    if (e.computed instanceof DeferredComputedRefImpl) {\n                        e.scheduler(true /* computedTrigger */);\n                    }\n                }\n            }\n            this._dirty = true;\n        });\n        this.effect.computed = this;\n    }\n\n    _get() {\n        if (this._dirty) {\n            this._dirty = false;\n            return (this._value = this.effect.run());\n        }\n        return this._value;\n    }\n\n    get value() {\n        trackRefValue(this);\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n        return toRaw(this)._get();\n    }\n}\n_a = '__v_isReadonly' /* ReactiveFlags.IS_READONLY */;\nfunction deferredComputed(getter) {\n    return new DeferredComputedRefImpl(getter);\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n"],"names":["effect","scheduler","shouldTrack","key","_a","isReadonly","get","set","isShallow","has","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","ref"],"mappings":"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"}