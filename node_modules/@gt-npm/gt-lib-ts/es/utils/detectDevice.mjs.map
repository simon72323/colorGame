{"version":3,"file":"detectDevice.mjs","sources":["../../../../packages/utils/detectDevice.ts"],"sourcesContent":["import { Logger } from '@gtLibTs/logger';\n\nimport { getUrlQuery } from '@gtLibTs/utils/urlUtils';\n\nexport type DeviceInfo = {\n    /** 遊戲單位 */\n    rd: string;\n    /** os版本 */\n    os: string;\n    /** navigator.userAgent */\n    ua: string;\n    /** 螢幕的解析度 */\n    srs: string;\n    /** window的寬高 */\n    wrs: string;\n    /** devicePiexlRatio */\n    dpr: number,\n    /** 程式語言 */\n    pl: string;\n    /** 瀏覽器版本 */\n    pf: string;\n    /** 是否使用webview */\n    wv: string;\n    /** 是否由AIO進來 */\n    aio: boolean,\n    /** 顯卡資訊 */\n    vga: string;\n    /** 是否為平板 */\n    tablet: boolean,\n    cts: number,\n    /** aio版本 ex: aio:1.0.8,phone:true */\n    mua: string;\n    /** aio檢測裝置名稱  ex:LYA-AL00 */\n    dtp: string;\n    /** 新aio參數 */\n    newaio: string;\n    /** UB資訊 */\n    ub: string;\n    /** 是否為PWA */\n    pwa: boolean;\n    /** Client IP 加密 */\n    encodeIP?: string;\n}\n\nexport class DetectDevice {\n    public static get isMobile() {\n        return DetectDevice.iOS || DetectDevice.Android || DetectDevice.isAIO || DetectDevice.BlackBerry || DetectDevice.WindowsPhone || DetectDevice.WindowsTablet || DetectDevice.webOS;\n    }\n\n    public static get isPC() {\n        return !DetectDevice.isMobile && !DetectDevice.isTablet;\n    }\n\n    public static get desktopOS() {\n        const target = navigator.userAgent;\n\n        switch(true) {\n            case target.includes('Windows NT 10.0'):\n                return 'Windows 10';\n            case target.includes('Windows NT 6.2'):\n                return 'Windows 8';\n            case target.includes('Windows NT 6.1'):\n                return 'Windows 7';\n            case target.includes('Windows NT 6.0'):\n                return 'Windows Vista';\n            case target.includes('Windows NT 5.1'):\n                return 'Windows XP';\n            case target.includes('Windows NT 5.0'):\n                return 'Windows 2000';\n            case target.includes('Windows NT'):\n                return 'Windows unknown';\n            case target.includes('Mac'):\n                return 'Mac/iOS';\n            case target.includes('X11'):\n                return 'UNIX';\n            case target.includes('Linux'):\n                return 'Linux';\n            default:\n                return '';\n        }\n    }\n\n    /** 個別取用平台判斷 */\n    public static get iOS() {\n        return /iPhone|iPad|iPod/i.test(navigator.userAgent) || DetectDevice.iPadOS;\n    }\n\n    public static get iPhone4Inch() {\n        return /iPhone/i.test(navigator.userAgent) && screen.width < 375;\n    }\n\n    public static get iPadOS() {\n        const ua = window.navigator.userAgent;\n\n        if (ua.includes('iPad')) {\n            return true;\n        } else if (ua.includes('Macintosh')) {\n            /**\n             *  iOS>13 後 新的iPadOS UA長\n             *  Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0 Safari/605.1.15\n             *  長得跟mac一樣\n             *  先改為判斷觸控點的方式 , 現行mac沒有多點觸控裝置\n             */\n            if (window.navigator.maxTouchPoints && window.navigator.maxTouchPoints > 2) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public static get isTablet() {\n        if (DetectDevice.isMobile) {\n            if (DetectDevice.iOS) {\n                return DetectDevice.iPadOS;\n            } else if (DetectDevice.Android) {\n                // Android 判斷平板的方式 一般手機有Mobile字串 平板沒有\n                // Huawei MediaPad M3(BTV-DL09)這平板的userAgent放了Mobile字串 所以要另外判斷掉\n                if (/Mobile/i.test(navigator.userAgent) && !/BTV-DL09/i.test(navigator.userAgent)) {\n                    return false;\n                }\n                return true;\n            } else if (DetectDevice.WindowsTablet) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public static get iOSWebView() {\n        return DetectDevice.iOS && !/safari/i.test(navigator.userAgent);\n    }\n\n    public static get AndroidWebView() {\n        return DetectDevice.Android && /wv/i.test(navigator.userAgent);\n    }\n\n    /** 判斷方式 用url search中有 platform=AIO */\n    public static get isAIO() {\n        return getUrlQuery('platform') === 'AIO';\n    }\n\n    public static get Android() {\n        return /Android/i.test(navigator.userAgent);\n    }\n\n    public static get BlackBerry() {\n        return /BlackBerry/i.test(navigator.userAgent);\n    }\n\n    public static get WindowsPhone() {\n        return /Windows Phone/i.test(navigator.userAgent);\n    }\n\n    public static get WindowsTablet() {\n        return /Windows/i.test(navigator.userAgent) && /ARM/i.test(navigator.userAgent);\n    }\n\n    public static get webOS() {\n        return /webOS/i.test(navigator.userAgent);\n    }\n\n    //----判別瀏覽器的版本\n    public static getBrowser() {\n        const spaceSp = navigator.userAgent.split(' ');\n        let browser = '';\n\n        // 加上版本號\n        switch (true) {\n            case DetectDevice.isUB:\n            case DetectDevice.isOpera:\n            case DetectDevice.isSafari:\n            case DetectDevice.isFirefox:\n            case DetectDevice.isEdge:\n            case DetectDevice.isIE:\n                browser = spaceSp[spaceSp.length - 1];\n                break;\n            case DetectDevice.isChrome:\n                browser = spaceSp[spaceSp.length - 2];\n                break;\n            default:\n                break;\n        }\n\n        // Android非主流瀏覽器判斷\n        if (/Mobile Safari/i.test(navigator.userAgent)) {\n            browser = spaceSp[spaceSp.length - 1];\n\n            if (browser.includes('Safari')) {\n                browser = spaceSp[spaceSp.length - 4];\n            }\n\n            if (browser.includes('Gecko')) {\n                browser = spaceSp[spaceSp.length - 3];\n            }\n        } else if (DetectDevice.Android && !browser) {\n            browser = spaceSp[spaceSp.length - 2];\n        }\n\n        // 針對IOS非Safari的瀏覽器\n        if (/iOS/i.test(navigator.userAgent)) {\n            browser = spaceSp[spaceSp.length - 3];\n        }\n\n        return browser.replace(/\\//g, ' ');\n    }\n\n    public static getOSAndVersion() {\n        const info = navigator.userAgent.split('(')[1].split(')')[0].split(';');\n\n        if (DetectDevice.Android) {\n            const androidVersion = info.find(item => item.includes('Android'));\n            return (androidVersion ?? '').trim();\n        } else if (DetectDevice.iOS) {\n            const os = info[0];\n            let verIndex = 0;\n            let version = '';\n\n            info.forEach((item, index) => {\n                item.includes('OS') && (verIndex = index);\n            });\n\n            const versionPart = info[verIndex].split(' ');\n            const osIndex = versionPart.indexOf('OS');\n            if (~osIndex) {\n                const versionString = navigator.userAgent.includes('Macintosh') ? versionPart[osIndex + 2] : versionPart[osIndex + 1];\n                version = versionString.replace(/_/g, '.');\n            }\n\n            return `${os} ${version}`;\n        } else {\n            const desktopOS = DetectDevice.desktopOS;\n\n            return desktopOS === 'Mac/iOS'\n                ? info[1].replace(/_/g, '.').trim()\n                : desktopOS;\n        }\n    }\n\n    /** UB瀏覽器 */\n    public static get isUB() {\n        return navigator.userAgent.includes(' UB');\n    }\n\n    /** Opera 8.0+ */\n    public static get isOpera() {\n        return !!(window as any).opr?.addons || !!(window as any).opera || navigator.userAgent.includes(' OPR/');\n    }\n\n    /** Firefox 1.0+ */\n    public static get isFirefox() {\n        return navigator.userAgent.includes('Firefox') || navigator.userAgent.includes('FxiOS');\n    }\n\n    /** Safari 3+ */\n    public static get isSafari() {\n        return /safari/i.test(navigator.userAgent) && !/chrome/i.test(navigator.userAgent) && !DetectDevice.isFirefox;\n    }\n\n    /** Internet Explorer 6-11 */\n    public static get isIE() {\n        //documentMode 是ie 特定屬性\n        return !!(document as any).documentMode;\n    }\n\n    /** Edge 20+ */\n    public static get isEdge() {\n        return navigator.userAgent.includes('Trident') || /Edg(A|iOS|e)?\\//.test(navigator.userAgent);\n        // 加上 Win10 Edge判斷\n    }\n\n    /** Chrome 1+ */\n    public static get isChrome() {\n        return /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9.]+)(:?\\s|$)/.test(navigator.userAgent);\n    }\n\n    public static getGraphicCardInfo(canvas = document.createElement('canvas')) {\n        let graphicCard = 'undefined';\n\n        try {\n            const webGL = canvas.getContext('webgl') || canvas.getContext('experimental-webgl') as WebGLRenderingContext | null;\n\n            if (webGL) {\n                const debugInfo = webGL.getExtension('WEBGL_debug_renderer_info');\n                debugInfo && (graphicCard = webGL.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL));\n            }\n        } catch (e) {\n            Logger.error(e);\n        }\n\n        return graphicCard;\n    }\n\n\n    /** 取得定義的硬體資訊 */\n    public static getDeviceInfo(canvas?: HTMLCanvasElement): DeviceInfo {\n        const spaceSp = navigator.userAgent.split(' ');\n\n        let browser = DetectDevice.getBrowser();\n        let webView = 'false';\n        let srs = `${screen.width}x${screen.height}`;\n        let newaio = '';\n        let ub: string[] = [];\n        let encodeIP = '';\n        let aio = false;\n        let tablet = false;\n        let pwa = false;\n\n        if (DetectDevice.isMobile) {\n            srs = `${screen.width * devicePixelRatio}x${screen.height * devicePixelRatio}`;\n\n            //--isMobile\n            aio = DetectDevice.isAIO;\n            tablet = DetectDevice.isTablet;\n\n            if (DetectDevice.iOS) {\n                webView = DetectDevice.iOSWebView ? 'is_iOSWebView' : 'isnot_iOSWebView';\n            } else if (DetectDevice.Android) {\n                webView = DetectDevice.AndroidWebView ? 'is_AndroidWebView' : 'isnot_AndroidWebView';\n            }\n            //--下載版等待API支援\n\n            if (aio) {\n                browser = '';   //---AIO裡的UserAgent內容會造成取到的瀏覽器資訊是錯誤的，故直接強制傳空值\n                const gPortal = spaceSp.find(item => item.includes('game_portal'));\n                const gPlatform = spaceSp.find(item => item.includes('game_platform'));\n                newaio = `${gPlatform} ${gPortal}`;\n            }\n        }\n\n        spaceSp.forEach(item => {\n            if (DetectDevice.isUB) {\n                if (\n                    item.includes('Chrome')\n                    || item.includes('UB')\n                    || item.includes('CustomBrowser')\n                ) {\n                    ub.push(item);\n                }\n            }\n\n            if (item.includes('HTTP_BB_FORWARDED')) {\n                encodeIP = item.split('HTTP_BB_FORWARDED/')[1];\n            }\n        });\n\n        if ((navigator as any).standalone || window.matchMedia('(display-mode: standalone)').matches) {\n            pwa = true;\n        }\n\n        const deviceInfo: DeviceInfo = {\n            rd: 'fx',\n            ua: navigator.userAgent,\n            os: DetectDevice.getOSAndVersion(),\n            srs,\n            wrs: `${window.innerWidth}x${window.innerHeight}`,\n            dpr: devicePixelRatio,\n            pl: 'H5',\n            pf: browser,\n            wv: webView,\n            aio,\n            vga: DetectDevice.getGraphicCardInfo(canvas),\n            tablet,\n            cts: Date.now(),\n            mua: getUrlQuery('mua'),\n            dtp: getUrlQuery('dtp'),\n            newaio,\n            ub: ub.join(' '),\n            pwa,\n            encodeIP: encodeIP || undefined\n        };\n\n        return deviceInfo;\n    }\n}"],"names":[],"mappings":"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"}