export declare enum TimeLabelKeys {
    entrance = "entrance",
    loader = "loader",
    ws = "ws",
    login = "login",
    takeMachine = "takeMachine",
    loadInfo = "loadInfo",
    setupCostumeStart = "setupCostumeStart",
    setupCostumeEnd = "setupCostumeEnd",
    machineDetailStart = "machineDetailStart",
    machineDetailEnd = "machineDetailEnd"
}
export type TimeLabels = {
    [key in TimeLabelKeys]?: TimeLabel;
} & {
    [key in string]?: TimeLabel;
};
export interface TimeLabel {
    label: TimeLabelKeys | string;
    preLabel?: TimeLabel;
    time: number;
    timeDiff: number;
    diffWith(label: TimeLabelKeys): number;
    diffWith(label: string): number;
}
export declare class LoadingInfo {
    static get shared(): LoadingInfo;
    private timeLabels;
    private currentLabel;
    private firstTime;
    gameType: string;
    userID: number;
    push(label: TimeLabelKeys): void;
    push(label: string): void;
    show(): void;
    totalTime(): number;
    getTime(label: TimeLabelKeys): number;
    getTime(label: string): number;
    sendLoadingTime(): void;
}
