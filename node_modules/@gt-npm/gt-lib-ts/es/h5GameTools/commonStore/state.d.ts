export declare namespace StoreState {
    type Values<T> = T[keyof T];
    const JPType: {
        Grand: 1;
        Minor: 2;
        Major: 3;
        Mini: 4;
    };
    type WinJPType = Values<typeof JPType>;
    type LoadInfoData = {
        isCash: boolean;
        LoginName: string;
        Credit: string | number;
        Balance: string | number;
        Currency?: string;
        BetBase: string;
        Base: string;
        DefaultBase: string;
        AutoExchange?: boolean;
        noExchange?: boolean;
        BetCreditList?: number[];
        UserID?: number;
        BuyFree?: boolean;
        LeftRound?: {
            BrickNum: string | number;
            LevelID: number;
        };
    } & Record<string, any>;
    type MachineDetailData = {
        Balance: number | string;
        Credit: number | string;
        Base: string;
        BetBase: string;
    } & Record<string, any>;
    type CreditExchangeData = {
        Balance: number | string;
        Credit: number | string;
        BetBase: string;
    } & Record<string, any>;
    type BalanceExchangeData = {
        TransCredit: string | number;
        Amount: string | number;
        Balance: string | number;
    } & Record<string, any>;
    type HitJackpotData = {
        JPType: number | string;
        JPAmount: number;
        beginGameResult: any;
    } & Record<string, any>;
    type LoginData = {
        UserID?: number;
        Sid: string;
        HallID: string;
        IP: string;
        userID?: number;
    };
}
export interface StoreState {
    /** 會員ID */
    userID: number;
    /** 押線 */
    line: number;
    /** 線注 */
    lineBet: number;
    /** 最大押線數 */
    maxLine: number;
    /** 單注最大限額 */
    maxLineBet: number;
    /** 機檯編號 */
    gameCode: string;
    /** 機台 */
    machineList: any;
    /** 洗分分數 */
    exchangeCredit: number;
    /** 洗分金額 */
    exchangeAmount: number;
    /** 4層彩金 */
    jackpot: number | string[];
    /** JP中獎訊息 */
    marquee: string;
    /** JP中獎類型 */
    winJPType: StoreState.WinJPType | 0;
    /** JP中獎金額 */
    winJPAmount: number;
    /** 會員帳號 */
    loginName: string;
    /** 會員餘額 */
    balance: number;
    /** 可用分數 */
    credit: number;
    /** 結束遊戲後的可用分數 */
    creditEnd: number;
    /** 匯率(基注)列表 */
    base: string;
    /** 匯率(基注) */
    betBase: string;
    /** 局號 */
    wagersID: string;
    /** 加密局號 */
    encryID: string;
    /** 第幾層 */
    levelID: number;
    /** 剩餘餅乾數(糖果&奪寶) */
    brickNum: number;
    /** 得分 */
    payoff: number;
    /** 押注 */
    bet: number;
    /** 開牌牌組 */
    cards: any;
    /** 連線 */
    lines: any;
    /** Scatter 資訊 */
    scatter: any;
    /** Bonus 資訊 */
    bonus: any;
    /** FreeGame 資訊 */
    free: any;
    /** FREE SPIN 次數 */
    freeTimes: number;
    /** FreeGame 額外倍率 */
    doubleTime: number;
    /** 2017.09.26新增  停止時軸的位置 , 固定軸類型的轉輪遊戲會有該值 */
    axisLocation: string;
    /** 2022.11.22新增  可下注的金額列表 */
    betCreditList: number[];
    /** 2022.11.22新增  預設下注金額 */
    defaultBetCredit: number;
    /** 款按鈕 */
    isCash: boolean;
    /** 否開啟購買免費遊戲 */
    enableBuyFreeGame: boolean;
    /** 2020.09.11新增 判斷是否為BB2的參考值 */
    isGCP: boolean;
    /** 2024.06.11新增 判斷是否為XC的參考值 */
    isXC: boolean;
    /** 兌換比例 */
    defaultBase: string;
    /** 2021.07.06新增 泰文特殊聽主用 */
    noExchange: boolean;
    /** 幣值 */
    currency: string;
    /** 字典檔 */
    i18n: Record<string, string>;
}
export interface FinalStoreState extends StoreState {
    [key: string]: any;
}
export declare function useStoreState(): StoreState;
